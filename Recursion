print 0-5 using recursion:
#include <iostream>

using namespace std;
int count = 0;
void fun()
{
    cout<<count<<endl;
    count++;
    if(count < 5)
    {
        fun();   
    }
}

int main()
{
    fun();

    return 0;
}
================================================
print names n times:
#include <iostream>
using namespace std;

void fun(int i, int n)
{
    if(i>n)
    {
        return;
    }
    else
    {
        cout<<"Gyanesh"<<endl;
    }
    fun(++i, n);
    
}

int main()
{
    int n;
    cin>>n;
    fun(1, n);

    return 0;
}
=============================================
Print linearly from 1 to N
#include <iostream>
using namespace std;

void fun(int i, int n)
{
    if(i>n)
    {
        return;
    }
    else
    {
        cout<<i<<endl;
    }
    fun(++i, n);
    
}

int main()
{
    int n;
    cin>>n;
    fun(1, n);

    return 0;
}
=============================
Print linearly from N to 1:
#include <iostream>
using namespace std;

void fun(int i)
{
    if(i<1)
    {
        return;
    }
    else
    {
        cout<<i<<endl;
    }
    fun(i-1);
    
}

int main()
{
    int n;
    cin>>n;
    fun(n);

    return 0;
}
===========================================
Print linearly from 1 to N by backtracking:
#include <iostream>
using namespace std;

void fun(int i, int n)
{
    if(i<1)
    {
        return;
    }
    fun(i-1, n);
    cout<<i<<endl;
}

int main()
{
    int n;
    cin>>n;
    fun(n, n);

    return 0;
}
=====================================================
Print linearly from N to 1 by backtracking:
#include <iostream>
using namespace std;

void fun(int i, int n)
{
    if(i>n)
    {
        return;
    }
    fun(i+1, n);
    cout<<i<<endl;
}

int main()
{
    int n;
    cin>>n;
    fun(1, n);

    return 0;
}
==========================================================
//Sum of first N numbers
#include <iostream>
using namespace std;
int sum=0;
void fun(int n)
{
    if(n<0)
    {
        cout<<"Sum = "<<sum<<endl;
        return;
    }
    sum+=n;
    fun(n-1);
}

int main()
{
    int n;
    cin >> n;
    fun(n);
}
============================================================
//Sum of first N numbers - 2nd way:
#include <iostream>

using namespace std;

void fun(int n, int sum)
{
    if(n<1)
    {
        cout<<"Sum: "<<sum<<endl;
        return;
    }
    fun(n-1, sum+n);
}

int main()
{
    int n, sum = 0;
    cin>>n;
    fun(n, sum);
}
==============================================================
Functional Recursion for above problem:
----------------------
#include <iostream>

using namespace std;

int fun(int n)
{
    if(n<1)
    {
        return 0;
    }
    return n+fun(n-1);
};

int main()
{
    int n, sum = 0;
    cin>>n;
    sum = fun(n);
    cout<<"Sum: "<<sum<<endl;
}
=======================================================
//Factorial of first N numbers using parameterized recursion
#include <iostream>
using namespace std;

void fun(int i, int fact)
{
    if(i<1)
    {
        cout<<"Factorial: "<<fact<<endl;
        return;
    }
    fun(i-1, fact*i);
}

int main()
{
    int n, factorial = 1;
    cin>>n;
    fun(n, factorial);
}
=======================================================
//Factorial of first N numbers using functional recursion
#include <iostream>

using namespace std;

int fun(int n)
{
    if(n<1)
    {
        return 1;
    }
    return n*fun(n-1);
}


int main()
{
    int n, fact = 1;
    cin>>n;
    fact = fun(n);
    cout<<"Factorial: "<<fact<<endl;
}
============================================================
//Reverse an array using recursion
#include <iostream>
using namespace std;
void swap(int &a, int &b)
{
    int temp = a;
    a = b;
    b = temp;
}
void reverse_array(int a, int b, int arr[])
{
    if(a >= b)
    {
        return;
    }
    swap(arr[a], arr[b]);
    reverse_array(a+1, b-1, arr);
}

int main()
{
    int arr[] = {1, 2, 3, 4, 5, 6};
    int len = sizeof(arr)/sizeof(arr[0]);
    reverse_array(0, len-1, arr);
    for(int i=0; i<len; i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}
============================================================
//Reverse an array using for loop
#include <iostream>
using namespace std;

int main()
{
    int a[] = {1, 2, 3, 4, 5, 6};
    int len = sizeof(a)/sizeof(a[0]);
    
    for(int i =0, j = len-1; i<(len/2); i++, j--)
    {
        int temp = a[i];
        a[i] = a[j];
        a[j] = temp;
    }
    
    for(int i=0; i<len; i++)
    {
        cout<<a[i]<<" ";
    }
    cout<<endl;
}
